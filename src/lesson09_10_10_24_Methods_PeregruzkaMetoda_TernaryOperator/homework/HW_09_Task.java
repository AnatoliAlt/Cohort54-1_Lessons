package lesson09_10_10_24_Methods_PeregruzkaMetoda_TernaryOperator.homework;
/*
Task 0
Написать метод, принимающий на вход строку. Метод должен вывести на экран число, соответсвующее количеству символов в строке.
Например: Если в метод пришла строка "hello" - метод должен вывести число 5 (так как в строке hello 5 символов)

Task 1
Написать метод, принимающий массив целых чисел и распечатывающий массив в обратной последовательности.
{1, 4, 3, 6, 7} -> распечатывает [7, 6, 3, 4, 1]
Copy
Перегрузить метод, если в него приходит индекс, то часть массива слева до этого индекса распечатывается
в обычном порядке, а начиная с этого индекса в обратном:
{1, 4, 3, 6, 7} + индекс 2 - > распечатывает [1, 4, 7, 6, 3]
Copy
Еще одна перегрузка: метод принимает массив и булевый флаг. Если флаг == true -> печатает массив в обратном порядке Если флаг == false -> печатает массив в прямом порядке

Task 2
Написать метод, принимающий на вход целое число. Метод должен вывести на экран 2 в степени этоЧисло
Например: Если в метод пришло число 3 - метод должен вывести число 8 (так как 2 в степени 3 = 8)
класс Math для нахождения степени числа использовать нельзя ;)

Task 3 * (Опционально)
Заполните массив 50 случайными числами от 1 до 100. Программа должна найти, и вывести на экран все простые числа. Посчитайте сколько получилось таких чисел в массиве. Простое число - число, которое делится на цело только на 1 и само себя.
Пример простых чисел: 3, 5, 7, 11, 13 и т.д.

Task4 * (опционально)
Написать программу, выводящую на экран треугольник, состоящий из цифр от 1 до 6 такого вида:
1
12
123
1234
12345
123456
Copy

Task 5
Написать метод, который принимает массив строк. Вывести на экран все символы самой длинной строки из массива.
Пример:
{ "One", "Two", "Twenty" } ->
T
w
e
n
t
y
 */

public class HW_09_Task {
}
