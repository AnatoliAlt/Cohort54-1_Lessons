package lesson_15__31_10_24_OOP_Abstraction_Constructor.classwork15;

/*
Абстракция - это отделение значимой информации от незначимой в кантексте
решаемой задачи.
Абстракция - это сокрытие подробностей и предостовление пользователю лишь
самых важных характеристик объекта.
В классах может быть представлено состояние объектов и их поведение.
В классах Java состояние представлено в виде полей, а поведение - в виде методов.
 */
public class CW15_Cat {

    //Поля класса описывающие свойства или характеристики объекта
    String name;// Имя
    String color;// Цвет
    int age;// Возраст

    //----- Конструктор по умолчанию ---------------/


    /*
     public Cat() { // -  Конструктор по умолчанию. Вызывается автоматически -
        // при использовании оператора "new"
         Cat cat = new Cat();// Создаем объект класса Cat
         в случае отсутствия методов прописанных нами
         public void  slep(){ // Спать
        System.out.println("Я сплю!");
    }
    public void run(){// Беготь
        System.out.println("Я бегу");
    }
    public void sayMeow(){ // Скажи(say) мяу()meow
        System.out.println("Meow");
    }
         */

    // ------ 02:05: Пустой конструктор --- Конструктор по умолчанию ---- /
    // Если у нас не написан ни один конструктор в классе
    // - то такой конструктор нам добавляется автоматически при компиляции
    public CW15_Cat() {

    }

    //----- Перегрузка конструктора класса ---------------/

    //------ 02:00:35 Параметризированый конструктор --- Cat1 ------/
    public CW15_Cat(String catName) {

        // Имя (строка) которая будет передана в конструктор
        // будет присвоено полю объекта
        name = catName;
    }


    //------ 02:20:30 Параметризированый конструктор --- Cat2 --/

    // -Cat2 - this - выиз 02:26:36 -- Конструктор, который принимает -
    // имя и окрас котика ---02:20:25 ----/
    public CW15_Cat(String catName, String color) {
        name = catName;
        // Ключевае слово this - выиз - используется внутри класса для ссылки -
        // на текущий объект в параметрах коструктора
        // this - Помогает в разрешении конфликта имен между полями и параметрами -
        // методов / конструкторов
        // color = color;
        this.color = color;
    }
    // ----- Cat3 --------------------------/

    public CW15_Cat(String name, String color, int age) {
        // Ключевое слово this может быть использовано для друних канструкторов класса
        this(name, color);// Вызов другого уонструкора. Должен быть первой строкой исполняемого кода.
        // Вызывается конструктор класса, принимающий две стринги
        // Соответствующие поля будут проинициализированы

        // this.name = name;
        // this.color = color;
        this.age = age;

    }


    // ----------------------------------------------------/
    // Конструктор вызванный(созданный нами) нами
    // Описание поведения объекта
    public void slep() { // Спать
        System.out.println("Я сплю!");

    }

    public void run() {// Беготь
        System.out.println("Я бегу");

    }

    public void sayMeow() { // Скажи(say) мяу()meow
        System.out.println("Meow");
    }

    // -------------- 02:16: --- Metod info -------------------/
    // ----- Метод, который показываем информацию о состоянии нашего котика ------ /

    public void info() {
        System.out.printf("Я котик %s, мой возраст: %d, мой окрас: %s\n", name, age, color);
    }
    //------------------------------------------------------/


}



