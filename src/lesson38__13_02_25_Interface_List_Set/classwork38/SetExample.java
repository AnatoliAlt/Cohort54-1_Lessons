package lesson38__13_02_25_Interface_List_Set.classwork38;

import java.util.HashSet;
import java.util.List;
import java.util.Set;

public class SetExample {

    /*
    Контракт между equals() и hashCode()
    Для корректной работы хэш-коллекции есть важное правило, состоящее из трех условий.
    1. Если дла объекта равны по методу equals(), то их хэш-коды должны быть равны.
    2. Если хэш-коды двух объектов различны, то объекты точно не равны по equals().
    Обратное не всегда верно. Разные объекты (не равные)могут иметь одинаковый хэш-код (коллизия).
    3. Многократный вызов метода hashCode() на неизмененном объекте каждый раз должны возвращать одинаковые результаты (хэш-коды).
     */
    public static void main(String[] args) {

        // Конструкторы
        Set<Integer> set = new HashSet<>(); // Создает пустой хеш-сет емкостью 16 и коэффициентом загрузки 0.75 (по умолчанию).
        set = new HashSet<>(20); // Создает пустой хеш-сет емкостью c указанной емкостью.

        // Принимает коллекцию - создает новый сет, содержащий уникальные элементы из указанной коллекции.
        set = new HashSet<>(List.of(1, 2, 3, 5, 6, 6, 6, 5, 3, 6, 0));
        System.out.println("set: " + set); // [0, 1, 2, 3, 5, 6]
    }
}
